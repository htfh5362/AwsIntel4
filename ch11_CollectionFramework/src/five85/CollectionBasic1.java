package five85;

public class CollectionBasic1 {

	public static void main(String[] args) {
		
//		*컬렉션 프레임웍(Collection Framework)
//		
//		데이터 군을 저장하는 클래스들을 표준화한 설계를 뜻한다
//		
//		컬렉션은 다수의 데이터, 즉 데이터 그룹을
//		프레임웍은 표준화된  프로그래밍 방식을 의미한다
//		
//		다수의 데이터를 다루는데 필요한 다양하고 풍부한 클래스들을 제공하기 때문에
//		프로그래머의 짐을 상당히 덜어 주고 있으며,
//		인터페이스와 다형성을 이용한 객체지향적 설계를 통해 표준화되어 있기 때문에
//		사용법을 익히기에도 편리하고 재사용성이 높은 코드를 작성할 수 있다는 장점이 있다
//		
//*		CollectionFramework의 핵심 인터페이스
//
//		List와 Set을 구현한 컬렉션 클래스들은 서로 많은 공통부분이 있어서
//		공통된 부분을 다시 뽑아 Collection인터페이스를 정의할 수 있었지만
//		Map 인터페이스는 이들과는 전혀 다른 형태로 컬렉션을 다루기 때문에
//		같은 상속계층도에 포함되지 못했다
//		
//		인터페이스			특징
//		List		순서가 있는 데이터의 집합. 데이터의 중복을 허용한다
//					구현클래스: ArrayList, LinkedList, Stack, Vector등
//		Set			순서를 유지하지 않는 데이터의 집합. 데이터의 중복을 허용하지 않는다
//					구현클래스: HashSet, TreeSet 등
//		Map			키(key)와 값(value)의 쌍(pair)으로 이루어진 데이터의 집합
//					순서는 유지되지 않으며, 키는 중복을 허용하지 않고, 값은 중복을 허용한다
//					구현클래스: HashMap, TreeMap, HashTable, Properties 등
//					
//		*List는 1차원적인 구조로 데이터를 늘어놓은 형태의 자료구조이다
//		배열과 흡사, 자료를 검색, 추가, 삭제가 용이함?
					
	}
	
}
